# General config
swagger: "2.0"
info:
  title: "OpenAPI Kubernetes"
  description: "Example OpenAPI configuration to call Project Datastore"
  version: "1.0.0"
host: "endpoints-oa-k8s.endpoints.sbt-endpoints.cloud.goog"

# Mime types to/from API
consumes:
- "application/json"
produces:
- "application/json"

# App Engine endpoints
paths:
  "/users":
    get:
      description: "Returns list of all the users registered in the site"
      operationId: "AllStackUsers"
      produces:
      - "application/json"
      responses:
        200:          
          description: "Return a list of users"
          schema:
            $ref: "#/definitions/users"
      security:
      - api_key: []
  
  "/users/{userId}":
    get:
      description: "Returns the quieried user entity with all of his properties"
      operationId: "StackUser.get"
      produces:
      - "application/json"
      responses:
        200:
          description: "Returns an user"
          schema:
            $ref: '#/definitions/user'
        404:
          description: "User not found"
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "Server unavailable"
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - in: "path"
          description: "User to get"
          name: "userId"
          type: "string"
          required: true
      security:
      - api_key: []
    put:
      description: "Add a new user to the database"
      operationId: "StackUser.put"
      produces:
      - "application/json"
      responses:
        201:
          description: "OK"
        400:
          description: "User already exists"

      parameters:
        - in: "path"
          description: "User to create"
          name: "userId"
          type: "string"
          required: true
        - in: "query"
          description: "Age of the user to create"
          type: "string"
          name: "age"
          required: false

      security:
      - service_account: []

    delete:
      description: "Deletes an user entity from the database"
      operationId: "Stackuser.delete"
      produces:
      - "application/json"
      responses:
        200:
          description: "User has been deleted"
        400:
          description: "User doesn't exist"
        500:
          description: "Server error, user could not be deleted"

      parameters:
        - in: "path"
          description: "User to delete"
          name: "userId"
          type: "string"
          required: true
      security:
      - api_key: []

                


# Object types
definitions:
  users:
    type: "array"
    items:
      type: "object"
      properties:
        users:
          type: "string"
  user:
    type: 'object'
    properties:
      username:
        type: 'string'
      last_connection:
        type: 'integer'
 
  Error:
    type: 'object'
    properties:
      message:
        type: 'string'

# Auth methods
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "key"
    in: "query"
  service_account:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "endpoints-sa@sbt-endpoints.iam.gserviceaccount.com"
    x-google-jwks_uri: "https://www.googleapis.com/robot/v1/metadata/x509/endpoints-sa@sbt-endpoints.iam.gserviceaccount.com"
